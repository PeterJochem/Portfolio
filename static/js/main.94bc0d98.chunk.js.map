{"version":3,"sources":["portfolio.js","GANDescription.js","TriplePendulumDescription.js","App.js","index.js"],"names":["GridOfPosts","props","state","className","this","pageNumber","projects","map","project","name","href","url","id","im_url","React","Component","defaultProps","Post","secondUrl","componentDidMount","bind","handleHover","document","getElementById","style","backgroundImage","console","log","e","setState","Portfolio","body","GANDescription","projectName","src","alt","width","height","frameborder","allow","allowfullscreen","TriplePendulumDescription","App","results","page1","github_url","page2","Site","title","exact","path","render","to","framebordr","ReactDOM"],"mappings":"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","file":"static/js/main.94bc0d98.chunk.js","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport ReactDOM from 'react-dom';\nimport './portfolio.css'; // Tell webpack that Button.js uses these styles\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\n\nclass GridOfPosts extends React.Component {\n\tconstructor(props) {\n \t\t super(props);\n\t}\n\t\n\t// Set the browser tab name\n\tcomponentDidMount(){\n\t\n\t}\n\n\tstate = {\n\t}\n\t\n\t\t\n\trender () {\n\t\treturn (\n\n\t\t\t<div className = \"GridOfPosts\"> \n\n\t\t\t<div className=\"grid-container\">\n\n\t\t\t{this.props.pageNumber.projects.map( (project) => {\n\t\t\t\treturn <div className = \"box\"> <div className = \"PostText\">  {project.name} </div>\n\t\t\t\t\t<a href = {project.url} >\t\n\t\t\t\t\t<div className = \"grid-item\" id = {project.name} >  <Post name = {project.name} im_url = {project.im_url} /> </div> </a>             \n\t\t\t\t\t</div> \n\t\t\t}\n\t\t\t)}\n\t\t\t</div>   \t \n\t\t\t</div>\n\t\t)\n\t}\n}\n\nGridOfPosts.propTypes = {\n\tpageNumber: PropTypes.node.isRequired,\n};\n\nGridOfPosts.defaultProps = {\n\tpageNumber: null,\n};\n\n\nclass Post extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.secondUrl = null;\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);        \n\t\tthis.handleHover = this.handleHover.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tvar myElement = document.getElementById(this.props.name);\t\n\t\tmyElement.style.backgroundImage = \"url(\" + this.props.im_url + \")\";\n\t\tvar new_im_url = \"https://raw.githubusercontent.com/PeterJochem/Portfolio/gh-pages/images/GAN.gif\"\n                this.secondUrl = \"url(\" + new_im_url + \")\"; \n\t\tconsole.log(this.secondUrl);\n\t}\n\t\n\t/* function handleHover(e) {\n   \t\tmyElement.style.backgroundImage = this.secondUrl;\n  \t}*/\n\t\n\n\thandleHover(e) { \n\t\t//var myElement = document.getElementById(this.props.name);\n\t\t//var new_im_url = \"https://raw.githubusercontent.com/PeterJochem/Portfolio/gh-pages/images/GAN.gif\"\n\t\t//myElement.style.backgroundImage = this.secondUrl;\n\t\t\n\t\tconsole.log(\"Hello World\");\n\t\tthis.setState({im_url: this.secondUrl});\n\t}\n\t\n\n\tstate = {\n\t\t// This is the number of posts in the grid\n\t\t//numPosts: 9\n\t\t//name: \"\"\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className = \"Post\">\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// Type check the props\nPost.propTypes = {\n\t// No built in image type, image: React.PropTypes.image\n\t// Alternative would be to store the URL/file location of the image\n\tname: PropTypes.string.isRequired,\n\tim_url: PropTypes.string.isRequired\n};\n\nPost.defaultProps = {\n\tname: 'me',\n\tim_url: ''\n};\n\n\nexport default class Portfolio extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t}\n\n\t// Set the browser tab name\n\tcomponentDidMount(){\n\t\tdocument.body.style.backgroundImage = null;\t\n\t}\n\n\tstate = { \n\t}\n\trender () {                                   \n\t\treturn (\n\t\t\t<div>\n\n\t\t\t<div className = \"portfolio\">\n\t\t\t<GridOfPosts pageNumber = {this.props.pageNumber} />\t\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// Type check the props\nPortfolio.propTypes = {\n\tpageNumber: PropTypes.element.isRequired,\n};\n\nPortfolio.defaultProps = {\n\t/* This describes if we are using the first or second page\n\tpageNumber: 1 */\n};\n\nclass ProjectDescription extends React.Component {\n        constructor(props) {\n                super(props);\n                this.componentDidMount = this.componentDidMount.bind(this);\n        }\n\n        componentDidMount(){\n//                var myElement = document.getElementById(this.props.projectName);\n        }\n\n        state = {\n                // This is the number of posts in the grid\n                //numPosts: 9\n                //name: \"\"\n        }\n\n        render () {\n                return (\n                        <div className = \"ProjectDescription\">\n                        <p>HEllo World</p>\n                        </div>\n                )\n        }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport ReactDOM from 'react-dom';\nimport './portfolio.css';\nimport './ProjectDescription.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\n\nexport default class GANDescription extends React.Component {\n        constructor(props) {\n                super(props);\n                this.componentDidMount = this.componentDidMount.bind(this);\n        }\n\n        componentDidMount(){\n//                var myElement = document.getElementById(this.props.projectName);\n        }\n\n        state = {\n                // This is the number of posts in the grid\n                //numPosts: 9\n                //name: \"\"\n        }\n\n        render () {\n                return (\n\t\t\t<div>\n\t\t\t<h1> {this.props.projectName} </h1>\n\t\t\t\n\t\t\t<p> I implemented a Generative Adversarial Network using Keras. I used the MNIST data set as the target data distribution to generate\n\t\t\tmore instances from. </p>\n\t\t\t\n\t\t\t<h1> What is a Generative Adversarial Network? </h1>\n\t\t\t<p>\n\t\t\tA generative adversarial network (GAN) is a class of machine learning frameworks designed by Ian Goodfellow and his colleagues in 2014. Two neural networks contest with each other in a game. Given a training set, this technique learns to generate new data with the same statistics as the training set. I used the MNIST handwritten digits dataset. This is a large dataset of about 70,000 images of handwritten numbers. A really great primer on GANs, their use, and their future can be found <a href = \"https://arxiv.org/abs/1701.00160\"> here </a> </p>\n\n\t\t\t<h1> Results </h1>\n\t\t\t<p>\n\t\t\tOn my first iteration, I implemented a simple GAN with only a shallow network and no convolutional operators. The results are still pretty cool. They certainly will not fool any humans but the network did learn a crude approximation of the input data distribution. </p>\n\t\t\t<img src = \"https://raw.githubusercontent.com/PeterJochem/MNIST_GAN/master/simpleNetworkResults.png\" alt = \"Vanilla GAN\" />\n\t\t\t\t\n\t\t\t<p>\n\t\t\tI also implemented a convolutional GAN and got much better results. The image set below shows a handful of images generated by the GAN. \n\t\t\t<img src = \"https://raw.githubusercontent.com/PeterJochem/MNIST_GAN/master/DCGAN_Results.png\" alt = \"Convolutional GAN\" />\n\t\t\t</p>\n\t\n\t\t\t<p>\n\t\t\tThis is a video of the generator evolving. Before starting to train the network, I create and store a random input vector for the generator. Every 100 training cycles, I forward prop this vector through the generator and store the resulting image. Those images are stacked to create a video. </p>  \n\t\t\t \n\t\t\t<iframe width = \"600\" height = \"315\" src = \"https://www.youtube.com/embed/S1WODtScCKI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\t\t\t\t\n\t\t\n\t\t\t</div>\n                )\n        }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport ReactDOM from 'react-dom';\nimport './portfolio.css';\nimport './ProjectDescription.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\n\nexport default class TriplePendulumDescription extends React.Component {\n        constructor(props) {\n                super(props);\n                this.componentDidMount = this.componentDidMount.bind(this);\n        }\n\n        componentDidMount(){\n        }\n\n        state = {\n        }\n\n        render () {\n                return (\n\t\t\t<div>\n\t\t\t<h1> {this.props.projectName} </h1>\n\t\t\t  \n\t\t\t<p> For a course on Lagrangian dynamics, I implemented a simulation of a triple pendulum using Python and sympy.\n                        The code can be found at <a href = \"\"> here </a>. Below is a video of the resuting simulation. </p> \n                     \t\n\t\t\t<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/dSZ0XCMFC5I\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen> </iframe>\n\t\t\t\n\t\t\t<p>\n\t\t\tI also added a feature to plot multiple triple pendulums at the same time but each having a slighly diffrent initial condition. This shows how dependent the trajectory is on the inital conditions. </p> \n\t\t\t<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/UMQPzCR5CdQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen> </iframe>\n\t\t\t\t\n\t\t\t</div>\n                )\n        }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Site from \"./index.js\";\n\nclass App extends React.Component {\n    constructor(){\n    super();\n    this.state = {\n     results: {}\n    }\n    }\n \n   render () {\n\treturn (\n\t\t<div className=\"App\">\n\t\t<div className=\"Site\">\n\t\t<Site />\n\t\t</div>\n\t\t</div>\n\t)\n   }\n}\nexport default App;\n// ReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}>< App /></BrowserRouter>, document.getElementById('root'));\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Link, Switch} from \"react-router-dom\";\nimport './index.css'; \nimport './portfolio.css';\nimport Portfolio from \"./portfolio\";\nimport GANDescription from \"./GANDescription\";\nimport TriplePendulumDescription from \"./TriplePendulumDescription\";\nimport App from \"./App.js\";\n\nconst page1 = {\n  projects: [\n    {\n        name: \"Triple Pendulum Simulation\",\n        url: \"https://peterjochem.github.io/Portfolio/#/TriplePendulumSimulation\",\n\tgithub_url: \"https://github.com/PeterJochem/TriplePendulum\",\n        im_url: \"https://peterjochem.github.io/myImages/pend.gif\"\n    },\n     {\n        name: \"Mobile Manipulator\",\n        url: \"https://github.com/PeterJochem/Mobile_Manipulator\",\n        im_url: \"https://peterjochem.github.io/myImages/kuka.gif\"\n    },\n    {\n        name: \"Terminator\",\n        url: \"https://github.com/ME495-EmbeddedSystems/final-project-terminator\",\n        im_url: \"https://peterjochem.github.io/myImages/terminator.png\"\n     },\n     {\n        name: \"Chess AI\",\n        url: \"https://github.com/PeterJochem/Chess_AI\",\n        im_url: \"https://peterjochem.github.io/myImages/chess.gif\"\n    },\n    {\n        name: \"Neural Network Snake\",\n        url: \"https://github.com/PeterJochem/Snake\",\n        im_url: \"https://peterjochem.github.io/myImages/Snake.png\"\n    },\n     {\n        name: \"Rapidly-Exploring Random Tree\",\n        url: \"https://github.com/PeterJochem/RRT\",\n        im_url: \"https://peterjochem.github.io/myImages/all_Points_3.png\"\n    },\n    {\n        name: \"Sawyer Ping Pong\",\n        url: \"https://github.com/PeterJochem/Sawyer_Ping_Pong\",\n        im_url: \"https://peterjochem.github.io/myImages/ping_trajectory.png\"\n     },\n      {\n        name: \"DeepQ Learning\",\n        url: \"https://github.com/PeterJochem/Grid_World_RL\",\n        im_url: \"https://peterjochem.github.io/myImages/NN_Large.png\"\n    },\n]\n}\n\n\nconst page2 = {\n  projects: [\n    {\n        name: \"Cart Pole RL\",\n        url: \"https://github.com/PeterJochem/Cart_Pole_RL\",\n        im_url: \"https://peterjochem.github.io/myImages/cartPole.gif\"\n    },\n     {\n        name: \"CBirch 97\",\n        url: \"https://github.com/PeterJochem/CBirch_97\",\n        im_url: \"https://peterjochem.github.io/myImages/CBirch97.gif\"\n    },\n    {\n        name: \"Canny Edge Detector\",\n        url: \"https://github.com/PeterJochem/CannyEdgeDetector\",\n        im_url: \"https://peterjochem.github.io/myImages/Lena_Processed.png\"\n    },\n    {\n        name: \"Acrobot RL\",\n        url: \"https://github.com/PeterJochem/Acrobot\",\n        im_url: \"https://peterjochem.github.io/myImages/learnedPolicy.gif\"\n    },\n    {\n        name: \"GAN\",\n        github_url: \"https://github.com/PeterJochem/MNIST_GAN\",\n        url: \"https://peterjochem.github.io/Portfolio/#/GAN\",\n \tim_url: \"https://peterjochem.github.io/myImages/DCGAN_Results.png\",\n    }\n  ]\n}\n\n\nclass Site extends React.Component {\n\n// Set the browser tab name\ncomponentDidMount(){\n    document.title = \"Peter Jochem\"\n}\n\nconstructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n\t    <HashRouter>\n\t    <Switch>\n       <div>\n          \n\t    <Route exact path='/' render={() => (\n            \t\n\t\t<div>\n\t\t\t<div className = \"Banner\"> \t\n\t\t  \t<div className = \"bannerName\"> Peter Jochem \n\t\t  \t</div>\n\t\t   \t<div className = \"moreInfo\">\n\t\t  \t\n\t\t\t<Link className = \"myResumeLink\" to =\"/ResumePage\">\n                                Resume\n                        </Link>\n\n\t\t  \t<Link className = \"moreProjectsLink\" to =\"/projects2\">  \n\t\t    \t\tMore Projects\n\t\t    \t</Link>\n\t\t        </div>\t\n\t\t</div>\n\n\t\t<div className = \"portfolio\"> <Portfolio  pageNumber = {page1} /> </div>\t\n\n\t\t</div>\t\n\n    \t\t)} />\n\t\t\n\t     <Route exact path='/projects2' render={() => (\n                <div>\n\t\t\t<div className = \"Banner\">\n                        <div className = \"bannerName\"> Peter Jochem\n                        </div>\n                        <div className = \"moreInfo\">\n\n\t\t     \t<Link className = \"myResumeLink\" to =\"/ResumePage\">\n                        \tResume\n\t\t\t</Link>\n\n\t\t     \t<Link className = \"moreProjectsLink\" to =\"/\">\n                                More Projects\n                        </Link>\n\t\t     \t\n                        </div>\n                        <div className = \"BannerImage\"> </div>\n                </div>\n                \n\t\t<div className = \"portfolio\"> <Portfolio  pageNumber = {page2} />  </div>\t\t\n                \n\t\t</div>\n                )} />\n\n\t\t <Route exact path='/GAN' render={() => (\n                <div>\n                        <div className = \"Banner\">\n                        <div className = \"bannerName\"> Peter Jochem\n                        </div>\n                        <div className = \"moreInfo\">\n\n                        <Link className = \"myResumeLink\" to =\"/ResumePage\">\n                                Resume\n                        </Link>\n\n                        <Link className = \"moreProjectsLink\" to =\"/\">\n                                More Projects\n                        </Link>\n\n                        </div>\n                        <div className = \"BannerImage\"> </div>\n                </div>\n\n                <div className = \"ProjectDescription\"> <GANDescription projectName = \"GAN\" />  </div>\n                </div>\n                )} />\n\n\t\t <Route exact path='/TriplePendulumSimulation' render={() => (\n                <div>\n                        <div className = \"Banner\">\n                        <div className = \"bannerName\"> Peter Jochem\n                        </div>\n                        <div className = \"moreInfo\">\n\n                        <Link className = \"myResumeLink\" to =\"/ResumePage\">\n                                Resume\n                        </Link>\n\n                        <Link className = \"moreProjectsLink\" to =\"/\">\n                                More Projects\n                        </Link>\n\n                        </div>\n                        <div className = \"BannerImage\"> </div>\n                </div>\n\n                <div className = \"ProjectDescription\"> <TriplePendulumDescription projectName = \"Triple Pendulum Simulation\" />  </div>\n                </div>\n                )} />\n\n\n\n\t    <Route exact path='/ResumePage' render={() => (\n\n                <div className = \"resumeBackground\">\n\t\t    \t<iframe id = \"myResumeFrame\" src=\"http://docs.google.com/viewer?url=https://raw.githubusercontent.com/PeterJochem/PeterJochem.github.io/6331c077619a0b5593287d0fcead9a932102b569/Resume.pdf&embedded=true\" width=\"600\" height=\"780\" framebordr=\"0\"></iframe>\n\t\t    </div>\n                )} />\n\n\t  </div>\n\t  \t\n\t  \t</Switch>\n\t  </HashRouter>\n    );\n  }\n}\nexport default Site;\n\n// ========================================\n\nReactDOM.render( <App />, document.getElementById('root') );\n\n\n"],"sourceRoot":""}